#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Daily_Spellcard_04"]
//#Background["./Stage/BG/STG_00.dnh"];
#Player[ "./../Player/PL_Reimu.dnh", "./../Player/PL_Marisa.dnh" ]
#System["./../System/System_Main_Hud.dnh"]
#Text["Date: 4/9/25, Time: 30 Mins[r]User: Tewi. Name: \"Danmaku Hopscotch\""]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );

let BossTex = GetCurrentScriptDirectory() ~ "./../Resource/Textures/Boss/Test_Boss.png";

//---------------------------------------------------Include-------------------------------------------------------

	#include "./../lib/Index_Boss.dnh"
	#include "./../lib/Lib_Spell.dnh"
	#include "./../lib/Lib_SpellCutin.dnh"	

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	T_HitEffect( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	//Init_Boss_Eternity( bossObj );

	Render_WheelGhost_A1( bossObj, ENEMY_BLUE );

	ObjRender_SetTextureFilter( bossObj, FILTER_NONE, FILTER_NONE, FILTER_NONE );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/2 + 16, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 760 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 50 ); //40-50 For standard Nons.
	}	
	case( EV_REQUEST_SPELL_SCORE ){
       SetScriptResult( 2500000 );
    }	

} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );
	
	SetCommonData( "Effect_X", bossX );
	SetCommonData( "Effect_Y", bossY );	

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 

task T_InitSpell(){
	
	//let CutinTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Cutin/CurseOfRa.png";
	
	T_CallSpell_A1( "\"Danmaku Hopscotch\"", 0, "Normal", objScene );
	//T_Call_Spell_Cutin( CutinTex, [ 0, 0, 450, 480 ], 0.8, CC_PINK );	
	
	ObjEnemyBossScene_StartSpell( objScene );
	
	yield;
	T_SpellBG_Generic();
	//T_SpellBG_Nina();
	
}	


//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_RED );
	T_Shoot_Banner( "Tewi Inaba", CC_RED, 40 );

	wait( 125 );

	T_PlaySE( SE_CHARGE_00, 30 );
	T_Charge_A1( bossObj, 20, "Petal", CC_PINK );

	wait( 80 );    

	T_InitSpell();
	
	wait( 160 );  
	
	ObjEnemy_SetDamageRate( bossObj, 0.13, 0.13 );

    float Offset_Y = 30;
    int Color = 1;
    int[] Color_Orb = [ SHOT_ORB_RED, SHOT_ORB_RED, SHOT_ORB_BLUE ];
    int[] Color_Shot = [ SHOT_BALL_RED, SHOT_BALL_RED, SHOT_BALL_BLUE ];
    bool Shot_Go = false;
    int Dir = 90;

	while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {

        Shot_Go = false;

        wait( 60 );
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
			T_PlaySE( SE_CHARGE_00, 30 );
			T_Charge_A1( bossObj, 20, "Petal", CC_BLUE );
		}	

        wait( 80 );            
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
			ascent (i in 0..5) {
				T_Create_HoppingShot( 0, Offset_Y + i * GetStgFrameHeight()/4, 0, Dir, 1.2, Color_Orb[ Color +1], Color_Shot[ Color +1], 10 );
				T_Create_HoppingShot( GetStgFrameWidth(), -Offset_Y + i * GetStgFrameHeight()/4, 180, Dir, -1.2, Color_Orb[ Color +1], Color_Shot[ Color +1], 10 );

				Dir = -Dir;
				Color = -Color;

				//wait( 1 );
			}
		}
        wait( 400 );


		ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2 + rand( -32, 32 ), Get_CenterY/2 + rand( -32, 32 ), 15, 1 );
        Shot_Go = true;

        //Offset_Y = -Offset_Y;

		wait( 300 );



	}

    task T_Create_HoppingShot( X, Y, Init_Angle, Dir, X_Speed, Color_A, Color_Shot, Delay ){

       // float Frame = 0;

        int Shot = ShotA2( X, Y, 1, Init_Angle, Color_A, 0, Color_A );
        ObjRender_SetBlendType( Shot, BLEND_ADD_ARGB );
        T_BulletTrail( Shot, CC_RED, 4, Color_Shot, Dir);
        //int Trail_Laser = CreateCurveLaserA1( ObjMove_GetX( Shot ), ObjMove_GetY( Shot ), 0, ObjMove_GetAngle( Shot ), 128, 24, SHOT_CURVY_LASER_RED, 0 );

        

        while ( !Obj_IsDeleted( Shot ) ) {

            ObjMove_AddPatternB2( Shot, 0, X_Speed, -4, NO_CHANGE, 0.1, NO_CHANGE, 3 );

            wait( 80 ); 

            //ObjMove_AddPatternB2( Shot, 0, NO_CHANGE, NO_CHANGE, NO_CHANGE, 0.01, NO_CHANGE, 1 );

           // wait( 60 ); 

        }


    }

	task T_BulletTrail( Obj, Color, Rate, Graphic, Dir ){

        float Frame = 0;

		while( !Obj_IsDeleted( Obj )){

			//int Shot_Name_A = ShotR1( ObjMove_GetX(Obj), ObjMove_GetY(Obj), 0, 1,  ObjMove_GetAngle(Obj) + 180 + rand( -32, 32 ), SHOT_BALL_PURPLE, 0, SHOT_BALL_PURPLE );
			//ObjRender_SetBlendType( Shot_Name_A, BLEND_ADD_ARGB );
			//ObjRender_SetColor( Shot_Name_A, 255, 255, 255 );
			//ObjShot_SetDeleteFrame( Shot_Name_A, 1 );

			int Shot_Name_B = ShotR1( ObjMove_GetX(Obj), ObjMove_GetY(Obj), 0, 0,  ObjMove_GetAngle(Obj) + 180, Graphic, 0, Graphic );
			ObjRender_SetBlendType( Shot_Name_B, BLEND_ADD_ARGB );
			//ObjRender_SetColor( Shot_Name_B, Color[0], Color[1], Color[2] );
			T_ManageTrail_Obj( Shot_Name_B, Frame );
            Frame++;
			//ObjShot_SetDeleteFrame( Shot_Name_B, 40  );			

			wait( Rate );
		}

		task T_ManageTrail_Obj( Trail_Shot, Frame ){
            
            while( Shot_Go != true ){

                yield;
            }

            if( Frame % 4 == 0 ){

                float Angle_RNG = rand ( -24, 24 );

				wait( rand( 10, 30 ) );
				if( !Obj_IsDeleted( Trail_Shot ) ) {
					int Shot_New_B = ShotA2( ObjMove_GetX( Trail_Shot ), ObjMove_GetY( Trail_Shot ), 0,  Dir + Angle_RNG, SHOT_STAR_GREEN, 8, DELAY_CLOUD_ORANGE );
					ObjMove_AddPatternA2( Shot_New_B, 70, 0, NO_CHANGE, 0.005, 0.5, 0 );                

					int Shot_New = ShotA2( ObjMove_GetX( Trail_Shot ), ObjMove_GetY( Trail_Shot ), 0,  Dir + Angle_RNG, SHOT_RICE_ORANGE, 8, DELAY_CLOUD_ORANGE );
					ObjMove_AddPatternA2( Shot_New, 60, 0, NO_CHANGE, 0.005, 0.5, 0 );
					ObjShot_SetDeleteFrame( Trail_Shot, 1 );	
				}	
                //ObjShot_SetDeleteFrame( Shot_New_B, 1 );	                

            }
            else{

                //wait( rand( 1, 60 ) );

                ObjShot_SetDeleteFrame( Trail_Shot, 1 );			
                //Obj_Delete( Trail_Shot );
            }

            //Shot_Go = false;

		}


	}
}	


//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		T_Boss_Shotdown( bossObj, "Petal", CC_RED );
		wait( 200 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

