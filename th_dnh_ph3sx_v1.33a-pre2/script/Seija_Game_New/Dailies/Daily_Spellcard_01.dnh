#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Daily_Spellcard_01"]
//#Background["./Stage/BG/STG_00.dnh"];
#Player[ "./../Player/PL_Reimu.dnh", "./../Player/PL_Marisa.dnh" ]
#System["./../System/System_Main_Hud.dnh"]
#Text["Date: 1/9/25, Time: 30 Mins - 1 Hour[r]User: Eternity Larva, Name: \"Divine Lifecyle\""]


//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );

let BossTex = GetCurrentScriptDirectory() ~ "./../Resource/Textures/Boss/Test_Boss.png";
//---------------------------------------------------Include-------------------------------------------------------

	#include "./../lib/Index_Boss.dnh"
	#include "./../lib/Lib_Spell.dnh"
	#include "./../lib/Lib_SpellCutin.dnh"	

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	T_HitEffect( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	Init_Boss_Eternity( bossObj );

	//Render_WheelGhost_A1( bossObj, ENEMY_BLUE );

	ObjRender_SetTextureFilter( bossObj, FILTER_NONE, FILTER_NONE, FILTER_NONE );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/2 + 16, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 830 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 40 ); //40-50 For standard Nons.
	}	
	case( EV_REQUEST_SPELL_SCORE ){
       SetScriptResult( 1500000 );
    }	

} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );
	
	SetCommonData( "Effect_X", bossX );
	SetCommonData( "Effect_Y", bossY );	

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 

task T_InitSpell(){
	
	//let CutinTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Cutin/CurseOfRa.png";
	
	T_CallSpell_A1( "\"Lifecycle Of Divinity\"", 0, "Normal", objScene );
	//T_Call_Spell_Cutin( CutinTex, [ 0, 0, 450, 480 ], 0.8, CC_PINK );	
	
	ObjEnemyBossScene_StartSpell( objScene );
	
	yield;
	//T_SpellBG_Nina();
	
}	


//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_GREEN );
	T_Shoot_Banner( "Eternity Larva", CC_GREEN, 40 );

	wait( 125 );

	T_PlaySE( SE_CHARGE_00, 30 );
	T_Charge_A1( bossObj, 20, "Petal", CC_PINK );

	wait( 80 );    

	T_InitSpell();
	
	wait( 160 );  
	
	ObjEnemy_SetDamageRate( bossObj, 0.23, 0.2 );

    float Dir = -0.6;
    float Angle_Offset = 45;
    async {
        while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {

            ObjMove_SetDestAtFrame( bossObj, GetStgFrameWidth()/2 +rand( -16, 16 ), GetStgFrameHeight()/4 + rand( -32, 16 ), 260, LERP_SMOOTHER );

            wait( 300 );
        } 

    } 

    /*
        async {

            while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
                ascent ( a in 0..12 ) {

                    if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) <= 0 ) {  break; }

                    T_PlaySE( SE_CHIME_00, 30 );
                    float Angle_RNG = rand( -45, 45 );

                    ascent ( b in 0..3 ) {

                        int Shot_Name_A = ShotR1( bossX, bossY, 16, 2 + b * 0.2/3, GetAngleToPlayer(bossObj) + Angle_RNG, SHOT_BALL_RED, 8, DELAY_CLOUD_RED );
                        ObjMove_AddPatternA2( Shot_Name_A, 30, NO_CHANGE, NO_CHANGE, -0.05, 0.5+ b * 0.2/3, 0 );
                        //yield;

                    }

                    wait( 30 );
                }	
            }
        }	    
    */
	while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {

		
		//int Shot_Count = 4;
        ascent ( a in 0..8 ) {

            T_PlaySE( SE_CHIME_00, 30 );

            ascent ( b in 0..6 ) {
                int Shot_Larva_A = ShotR1( 0 + b * GetStgFrameWidth()/5, 0, 16, 1, 90 + Angle_Offset, SHOT_OVAL_MINT, 8, DELAY_CLOUD_MINT );
                T_Manage_Imago( Shot_Larva_A, Dir, a, 8 );

            }	

            wait( 8 );
        } 
	
        Angle_Offset = -Angle_Offset;
        Dir = -Dir;

		wait( 80 );
		yield;

	}

    task T_Manage_Imago( Obj, Dir, ID, Count ){

        float Max_Speed = 3;

        async {

            while( !Obj_IsDeleted( Obj )){

                ObjMove_AddPatternA2( Obj, 0, NO_CHANGE, NO_CHANGE, 0.01, Max_Speed, Dir );

                wait( 120 );

                ObjMove_AddPatternA2( Obj, 0, NO_CHANGE, NO_CHANGE, 0.01, Max_Speed, -Dir );

                wait( 120 );            

            }

        }


        while( !Obj_IsDeleted( Obj )){

            if( ObjMove_GetY( Obj ) >= GetStgFrameHeight() -16 ){
                T_PlaySE( SE_SHOT_00, 28 );
                ObjMove_SetSpeed( Obj, 0 );
                ObjShot_SetGraphic( Obj, SHOT_LARGE_MINT );
                ObjRender_SetBlendType( Obj, BLEND_ADD_ARGB );
                ObjRender_SetScaleXYZ( Obj, 1 + ID * 2/Count, 1 + ID * 2/Count, 0 );
                Max_Speed = 0;
                break; 
                    
            }

                yield;
        } 

        wait( 30 );

        float Scale_X = ObjRender_GetScaleX( Obj );
        float Scale_Y = ObjRender_GetScaleY( Obj );
 
        ascent (i in 0..20 ) {

            ObjRender_SetScaleXYZ( Obj, Scale_X - i * Scale_X/20, Scale_Y - i * Scale_Y/20, 0 );
            yield;

        }
        /*
        if( ID % 2 == 0 ){
            ascent (i in 0..10 ) {
                int Shot_Subshot_A = ShotR1( ObjMove_GetX( Obj ), ObjMove_GetY( Obj ), 8, 1,  i * 360/10, SHOT_SAKURA_DRED, 12, DELAY_CLOUD_RED );
                 //wait( 10 );
            }

        }
        */
           
        wait( 40 );

        if( ID % 8 == 0 && !Obj_IsDeleted( Obj ) ){

            T_PlaySE( SE_CHIME_01, 30 );
            int Shot_Subshot_B = ShotR1( ObjMove_GetX( Obj ), ObjMove_GetY( Obj ), 0, 0, GetAngleToPlayer( Obj ), SHOT_ANIMATED_BUTTERFLY_YELLOW, 12, SHOT_ANIMATED_BUTTERFLY_YELLOW );                ObjMove_AddPatternA2( Shot_Subshot_B, 10, 0, NO_CHANGE, 0.01, 8, 0 );
            T_BulletTrail( Shot_Subshot_B, CC_YELLOW, 4, SHOT_DROP_DYELLOW, 1 );
        }              

        Obj_Delete( Obj );

            
    }  

	task T_BulletTrail( Obj, Color, Rate, Graphic, Size ){

        float Frame = 0;

		while( !Obj_IsDeleted( Obj )){

            //T_PlaySE( SE_SHOT_00, 28 );
			//int Shot_Name_A = ShotR1( ObjMove_GetX(Obj), ObjMove_GetY(Obj), 0, 1,  ObjMove_GetAngle(Obj) + 180 + rand( -32, 32 ), SHOT_BALL_PURPLE, 0, SHOT_BALL_PURPLE );
			//ObjRender_SetBlendType( Shot_Name_A, BLEND_ADD_ARGB );
			//ObjRender_SetColor( Shot_Name_A, 255, 255, 255 );
			//ObjShot_SetDeleteFrame( Shot_Name_A, 1 );

			int Shot_Name_B = ShotR1( ObjMove_GetX(Obj), ObjMove_GetY(Obj), 0, 1,  ObjMove_GetAngle(Obj) + 180 + rand( -16, 16 ), Graphic, 0, Graphic );
			ObjRender_SetBlendType( Shot_Name_B, BLEND_ADD_ARGB );
            T_ManageTrail_Obj( Shot_Name_B );
			//ObjRender_SetColor( Shot_Name_B, Color[0], Color[1], Color[2] );
            //ObjMove_AddPatternA2( Shot_Name_B, 120, NO_CHANGE, NO_CHANGE, 0.01, 8, 0 );
			//if( Frame % 2 == 0 ){ T_ManageTrail_Obj( Shot_Name_B ); }

            Frame++;

			wait( Rate );
		}

		task T_ManageTrail_Obj( Trail_Shot ){

            ObjShot_SetDeleteFrame( Trail_Shot, 30 );	

            wait( 30 );

            ObjRender_SetColor( Trail_Shot, Color[0]/2, Color[1]/2, Color[2]/2 );
            //T_DeleteShot_Effect( Trail_Shot );

			ascent (i in 0..20) {
				
				ObjRender_SetScaleXYZ( Trail_Shot, Size - i * Size/20, Size - i * Size/20, Size - i * Size/20 );

				yield;
			}

		}


	}
}	


//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		T_Boss_Shotdown( bossObj, "Petal", CC_RED );
		wait( 200 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

